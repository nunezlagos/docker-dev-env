# Stack del Entorno de Desarrollo Docker
# Servicios: MySQL, PostgreSQL, MongoDB, Redis, PHP, Python, Node.js, Nginx, Adminer
# Autor: nunezlagos
# DescripciÃ³n: Entorno de desarrollo completo con proxy reverso Traefik

version: '3.8'
services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: appdb
      MYSQL_USER: devuser
      MYSQL_PASSWORD: devpass
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - traefik

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: devuser
      PMA_PASSWORD: devpass
    ports:
      - 8081:80
    depends_on:
      - mysql
    networks:
      - traefik

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: appdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - traefik

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 8082:80
    depends_on:
      - postgres
    networks:
      - traefik

  mongo:
    image: mongo:6
    volumes:
      - mongodata:/data/db
    networks:
      - traefik

  mongo-express:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - 8083:8081
    depends_on:
      - mongo
    networks:
      - traefik

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - traefik

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - 8084:8081
    depends_on:
      - redis
    networks:
      - traefik

  php:
    image: php:8.2-apache
    volumes:
      - ../projects:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
    ports:
      - 8085:80
      - 9003:9003
    networks:
      - traefik
    command: >
      bash -c "docker-php-ext-install mysqli pdo pdo_mysql &&
               pecl install xdebug &&
               docker-php-ext-enable xdebug &&
               apache2-foreground"
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.php.rule=Host(`php.localhost`)"
      - "traefik.http.routers.php.entrypoints=web"
      - "traefik.http.services.php.loadbalancer.server.port=80"

  python:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ../projects:/app
    ports:
      - 8000:8000
      - 5678:5678
    networks:
      - traefik
    command: sh -c "pip install flask django fastapi uvicorn gunicorn requests pandas numpy jupyter debugpy && tail -f /dev/null"
    tty: true
    stdin_open: true
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.python.rule=Host(`python.localhost`)"
      - "traefik.http.routers.python.entrypoints=web"
      - "traefik.http.services.python.loadbalancer.server.port=8000"

  nodejs:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ../projects:/app
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - traefik
    command: sh -c "npm install -g @angular/cli @vue/cli create-react-app typescript ts-node nodemon && tail -f /dev/null"
    tty: true
    stdin_open: true
    environment:
      - NODE_ENV=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodejs.rule=Host(`node.localhost`)"
      - "traefik.http.routers.nodejs.entrypoints=web"
      - "traefik.http.services.nodejs.loadbalancer.server.port=3000"

  nginx:
    image: nginx:alpine
    volumes:
      - ../html:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`static.localhost`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    profiles:
      - static

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.rule=Host(`mail.localhost`)"
      - "traefik.http.routers.mailhog.entrypoints=web"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

  adminer:
    image: adminer
    ports:
      - 8087:8080
    networks:
      - traefik
    depends_on:
      - mysql
      - postgres
    environment:
      - ADMINER_DEFAULT_SERVER=mysql

networks:
  traefik:
    external: true

volumes:
  mysql-data:
  pgdata:
  mongodata:
  redis-data:
  php-projects:
  php-personal:
  php-work:
  node-projects:
  node-personal:
  node-work:
  python-projects:
  python-personal:
  python-work:
  nginx-html:
